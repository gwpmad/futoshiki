{"version":3,"sources":["components/styled-components/content/index.js","components/styled-components/title/index.js","components/app-container/container.js","game-logic/helpers/arrays-match.js","game-logic/helpers/clone-array.js","game-logic/helpers/count-2d-array-occurrences.js","game-logic/helpers/generate-coordinates.js","game-logic/helpers/get-coordinates-in-direction.js","game-logic/helpers/get-two-thirds.js","game-logic/helpers/get-random-int-inclusive.js","game-logic/helpers/get-value-in-direction.js","game-logic/helpers/shuffle-array.js","game-logic/check-solution/index.js","game-logic/create-full-grid/index.js","constant-values/index.js","game-logic/create-value-coordinates/index.js","game-logic/get-game-grid/index.js","game-logic/create-greater-than-coordinates/index.js","game-logic/get-value-at-coordinates/index.js","game-logic/solve-game-grid/index.js","game-logic/traverse-grid/index.js","reducers/reducer.js","reducers/actions.js","reducers/action-types.js","reducers/index.js","components/app-container/index.js","components/below-game/container.js","components/below-game/index.js","components/block/chevron/container.js","components/block/chevron/index.js","components/block/container.js","components/block/notes/container.js","components/block/notes/note.js","components/block/notes/index.js","components/block/index.js","components/grid/container.js","components/grid/index.js","components/new-game-button/container.js","components/new-game-button/index.js","components/number-button/container.js","components/number-button/index.js","components/number-controls/container.js","components/number-controls/index.js","components/row/container.js","components/row/index.js","components/toggle-notes-button/container.js","components/toggle-notes-button/index.js","core/configure-store/index.js","core/service-worker/index.js","styles/global.js","index.js","styles/theme.js"],"names":["Content","styled","div","Title","h1","theme","css","colors","lightBlack","Container","gameCompleted","lightTurquoise","darkTurquoise","limeGreen","faintLimeGreen","arraysMatch","arr1","arr2","Array","isArray","length","i","cloneArray","array","JSON","parse","stringify","count2dArrayOccurrences","arrayOfArrays","filter","value1","value2","generateCoordinates","getRandomIntInclusive","SIDE_LENGTH","getCoordinatesInDirection","direction","coord1","coord2","right","left","above","below","getTwoThirds","number","_min","_max","min","Math","ceil","max","floor","random","getValueInDirection","coords","adjacentCoords","getValueAtCoordinates","shuffleArray","shuffledArray","slice","shuffleIdx","checkSolution","gameGrid","fullGrid","numbersOnlyGameGrid","map","row","enteredValue","value","createFullGrid","grid","numbers","_","idx","getUnshuffledGrid","shuffleOneAxis","subArray","createValueCoordinates","quota","greaterThanCoordinates","greaterThanPairs","Object","entries","reduce","pairs","directionPairs","gtCoords","getGreaterThanPairs","coordinatesList","newCoordinates","canUseCoordinates","push","newCoords","some","pair","pairWithoutNewCoords","otherCoords","negatesGTClue","getEmptyGameGrid","greaterThan","decorateBlocks","cluesQuota","clues","createGreaterThanCoordinates","valuesQuota","values","flat","valueCoordinates","getClues","forEach","addGreaterThanClues","addValueClues","block","notes","addPropertiesToEmptyBlocks","noUniqueSolution","solveGameGrid","getGameGrid","minClues","getValidDirection","createCoordinatesMap","shuffledDirections","keys","coordsAlreadyUsedWithDirection","isGreaterThanNeighbour","adjacentValue","Boolean","allCoords","getAllCoordinates","coordinatesUsedMaxTimes","coordinates","oppositeDirections","findSolution","solutions","gridCopy","square","gridIterationComplete","numericGrid","getNumericGrid","solutionAlreadyFound","getNextCoordinates","potentialValues","getPotentialValues","potentialValue","gtClash","checkGreaterThans","maybeSolvedGameGrid","solution","removePotentialValue","opposite","includes","squareCannotBeFive","squareCannotBeOne","squareGTClash","checkSquareGreaterThans","surroundingGTClash","checkSurroundingGreaterThans","otherSquare","solvedGrid","traverseGrid","coord","initialState","selectedBlock","notesMode","reducer","selectBlock","type","setBlockValue","state","action","rowIdx","colIdx","correctSolution","note","AppContainer","useSelector","dispatch","useDispatch","dispatchDeselectBlock","useCallback","noGameGrid","useEffect","moveUp","moveDown","moveLeft","moveRight","useMousetrap","canSetBlockValue","canEditBlockNotes","handleNumberInput","console","log","handleDeletePress","title","className","onClick","BelowGame","style","width","marginLeft","getDirectionStyles","Chevron","containsValueClue","isActive","color","pastelBlue","midBlue","white","transparent","lightBlue","Note","Notes","Children","toArray","Block","rowIndex","colIndex","blockValue","showNotes","handleClick","e","stopPropagation","Grid","button","NewGameButton","startNewGame","darkBrown","NumberButton","NumberControls","key","Row","ToggleNotesButton","dispatchToggleNotesMode","notesAction","persistedReducer","persistReducer","storage","configureStore","store","createStore","undefined","persistor","persistStore","window","location","hostname","match","createGlobalStyle","ReactDOM","render","brownishGrey","grey","lilac","pink","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ea04259.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Content = styled.div`\n  max-width: 500px;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Title = styled.h1`\n  ${({ theme }) => css`\n    color: ${theme.colors.lightBlack};\n    margin-top: 0;\n    margin-bottom: 4px;\n    text-align: center;\n  `}\n`;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n  ${({ gameCompleted, theme: { colors } }) => css`\n    align-items: center;\n    background-image: radial-gradient(\n      ${colors.lightTurquoise},\n      ${colors.darkTurquoise}\n    );\n    display: flex;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    height: 100%;\n    justify-content: center;\n    position: relative;\n    z-index: 1;\n\n    &:before {\n      background-image: radial-gradient(\n        ${colors.limeGreen},\n        ${colors.faintLimeGreen}\n      );\n      bottom: 0;\n      content: '';\n      left: 0;\n      opacity: ${gameCompleted ? '1' : '0'};\n      position: absolute;\n      transition: opacity 0.3s linear;\n      right: 0;\n      top: 0;\n      z-index: -1;\n    }\n  `}\n`;\n\nexport default Container;\n","/**\n * Compares two arrays (of any dimensions) and returns true if they are equal, otherwise returns false\n * @param arr1 first array to be compared\n * @param arr2 second array to be compared\n */\nfunction arraysMatch(arr1, arr2) {\n  if (!Array.isArray(arr1) && !Array.isArray(arr2)) return arr1 === arr2;\n\n  if (arr1.length !== arr2.length) return false;\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (!arraysMatch(arr1[i], arr2[i])) return false;\n  }\n  return true;\n}\n\nexport default arraysMatch;\n","/**\n * Returns a deep copy of an array (the array cannot include any functions or methods)\n * @param {array} array The array to copy\n */\nfunction cloneArray(array) {\n  return JSON.parse(JSON.stringify(array));\n}\n\nexport default cloneArray;\n","/**\n * Counts the number of times an array of arrays includes a certain array (the check is for identical contents, not the same object in memory)\n * @param {array} arrayOfArrays A 2D array\n * @param {array} array The array the function checks for\n */\nfunction count2dArrayOccurrences(arrayOfArrays, array) {\n  return arrayOfArrays.filter(\n    ([value1, value2]) => value1 === array[0] && value2 === array[1]\n  ).length;\n}\n\nexport default count2dArrayOccurrences;\n","import { SIDE_LENGTH } from 'constant-values';\nimport { getRandomIntInclusive } from '.';\n\n/**\n * Generates a set of coordinates in array form\n */\nfunction generateCoordinates() {\n  return [\n    getRandomIntInclusive(0, SIDE_LENGTH - 1),\n    getRandomIntInclusive(0, SIDE_LENGTH - 1)\n  ];\n}\n\nexport default generateCoordinates;\n","/**\n * Gets the coordinates in a specified direction on a 2d array. Array length is not considered,\n * and negative numbers can be returned\n * @param {array} coordinates An array with the row and column indexes for a 2d array\n * @param {*} direction The direction to return coordinates for\n */\nfunction getCoordinatesInDirection([coord1, coord2], direction) {\n  const adjacentCoordsLookup = {\n    right: [coord1, coord2 + 1],\n    left: [coord1, coord2 - 1],\n    above: [coord1 - 1, coord2],\n    below: [coord1 + 1, coord2]\n  };\n\n  return adjacentCoordsLookup[direction];\n}\n\nexport default getCoordinatesInDirection;\n","/**\n * Returns two-thirds of a number\n * @param {number} number\n */\nfunction getTwoThirds(number) {\n  return number * 0.66666666;\n}\n\nexport default getTwoThirds;\n","/**\n * Returns a random integer between two numbers, inclusive\n * @param {number} _min\n * @param {number} _max\n */\nfunction getRandomIntInclusive(_min, _max) {\n  const min = Math.ceil(_min);\n  const max = Math.floor(_max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default getRandomIntInclusive;\n","import { getCoordinatesInDirection } from '.';\nimport { getValueAtCoordinates } from 'game-logic';\n\n/**\n * Returns the value in a 2D array one step in a specified direction from the specified coordinates.\n * Returns undefined if the coordinates or those one step away do not exist in the array\n * @param {array} array A 2D array\n * @param {array} coordinates The coordinates to step one index away from\n * @param {string} direction\n */\nfunction getValueInDirection(array, coords, direction) {\n  const adjacentCoords = getCoordinatesInDirection(coords, direction);\n  return getValueAtCoordinates(array, adjacentCoords);\n}\n\nexport default getValueInDirection;\n","/**\n * Returns a shuffled version of an array using the modern version of the Fisher-Yates algorithm\n * @param {array} An array to shuffle (can be an array of arrays)\n */\nfunction shuffleArray(array) {\n  const shuffledArray = array.slice();\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    let shuffleIdx = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[shuffleIdx]] = [\n      shuffledArray[shuffleIdx],\n      shuffledArray[i]\n    ];\n  }\n  return shuffledArray;\n}\n\nexport default shuffleArray;\n","import { arraysMatch } from '../helpers';\n\n/**\n * Takes a Futoshiki game grid and a full Futoshiki grid and compares the two.\n * Returns true if the game grid and the full grid match, and false if not\n * @param {array} gameGrid A Futoshiki game grid (with clues and player-supplied answers)\n * @param {array} fullGrid A full Futoshiki grid with numbers only\n */\nfunction checkSolution(gameGrid, fullGrid) {\n  const numbersOnlyGameGrid = gameGrid.map(row =>\n    row.map(({ enteredValue, value }) => enteredValue || value)\n  );\n  return arraysMatch(numbersOnlyGameGrid, fullGrid);\n}\n\nexport default checkSolution;\n","import { SIDE_LENGTH } from 'constant-values';\nimport { shuffleArray as shuffleOneAxis } from '../helpers';\n\n/**\n * Returns a 5*5 grid with the numbers 1 to 5 randomly distributed in each row and column\n */\nfunction createFullGrid() {\n  let grid = getUnshuffledGrid();\n\n  grid = shuffleOneAxis(grid);\n  grid = switchAxes(grid);\n  grid = shuffleOneAxis(grid);\n\n  return grid;\n}\n\n/**\n * Returns a 5*5 with the numbers 1 to 5 numerically ordered (but starting at different indexes) in each row and column\n */\nfunction getUnshuffledGrid() {\n  const numbers = [...new Array(5)].map((_, idx) => idx + 1);\n  const grid = [];\n  for (let i = 0; i < SIDE_LENGTH; i++) {\n    grid[i] = [...numbers.slice(i, numbers.length), ...numbers.slice(0, i)];\n  }\n  return grid;\n}\n\n/**\n * Switches the axes of the array of the array, allowing for the opposite axis to be shuffled later while keeping the sets together\n * @param array An array of arrays\n */\nfunction switchAxes(array) {\n  return array.map((_, idx) => {\n    return array.map(subArray => subArray[idx]);\n  });\n}\n\nexport default createFullGrid;\n","export const SIDE_LENGTH = 5;\n\nexport const INITIAL_MIN_CLUES = 8;\n","import {\n  count2dArrayOccurrences,\n  generateCoordinates,\n  getCoordinatesInDirection\n} from '../helpers';\n\nfunction createValueCoordinates(quota, greaterThanCoordinates) {\n  const greaterThanPairs = getGreaterThanPairs(greaterThanCoordinates);\n\n  const coordinatesList = [];\n  for (let i = 0; i < quota; i++) {\n    let newCoordinates;\n    do {\n      newCoordinates = generateCoordinates();\n    } while (!canUseCoordinates(newCoordinates));\n\n    coordinatesList.push(newCoordinates);\n  }\n  return coordinatesList;\n\n  function getGreaterThanPairs(greaterThanCoordinates) {\n    return Object.entries(greaterThanCoordinates).reduce(\n      (pairs, [direction, greaterThans]) => {\n        const directionPairs = greaterThans.map(gtCoords => [\n          gtCoords,\n          getCoordinatesInDirection(gtCoords, direction)\n        ]);\n        return [...pairs, ...directionPairs];\n      },\n      []\n    );\n  }\n\n  function canUseCoordinates(newCoords) {\n    const alreadyUsed = count2dArrayOccurrences(coordinatesList, newCoords) > 0;\n    if (alreadyUsed) return false;\n    return !negatesGTClue(newCoords);\n  }\n\n  function negatesGTClue(newCoords) {\n    return greaterThanPairs.some(pair => {\n      const pairWithoutNewCoords = pair.filter(\n        coords => coords[0] !== newCoords[0] || coords[1] !== newCoords[1]\n      );\n      if (pairWithoutNewCoords.length > 1) return false;\n\n      const [otherCoords] = pairWithoutNewCoords;\n      return count2dArrayOccurrences(coordinatesList, otherCoords) > 0;\n    });\n  }\n}\n\nexport default createValueCoordinates;\n","import { INITIAL_MIN_CLUES } from 'constant-values';\nimport {\n  createGreaterThanCoordinates,\n  createValueCoordinates,\n  solveGameGrid\n} from 'game-logic';\nimport { getRandomIntInclusive } from '../helpers';\n\nfunction getGameGrid(fullGrid, minClues = INITIAL_MIN_CLUES) {\n  let gameGrid;\n  do {\n    const cluesQuota = getRandomIntInclusive(minClues, minClues + 2);\n    gameGrid = getEmptyGameGrid(fullGrid);\n    decorateBlocks(gameGrid, fullGrid, cluesQuota);\n    minClues++;\n  } while (noUniqueSolution(gameGrid));\n  return gameGrid;\n}\n\nfunction getEmptyGameGrid(fullGrid) {\n  return fullGrid.map(row => row.map(() => ({ greaterThan: [] })));\n}\n\nfunction decorateBlocks(gameGrid, fullGrid, cluesQuota) {\n  const clues = getClues(fullGrid, cluesQuota);\n  addGreaterThanClues(gameGrid, clues.greaterThanCoordinates);\n  addValueClues(gameGrid, fullGrid, clues.valueCoordinates);\n  addPropertiesToEmptyBlocks(gameGrid);\n}\n\nfunction getClues(grid, cluesQuota) {\n  const greaterThanCoordinates = createGreaterThanCoordinates(grid, cluesQuota);\n\n  const valuesQuota = cluesQuota - countGreaterThans(greaterThanCoordinates);\n  const valueCoordinates = createValueCoordinates(\n    valuesQuota,\n    greaterThanCoordinates\n  );\n  return { greaterThanCoordinates, valueCoordinates };\n}\n\nfunction countGreaterThans(map) {\n  return Object.values(map).flat().length;\n}\n\nfunction addGreaterThanClues(gameGrid, greaterThanCoordinates) {\n  Object.entries(greaterThanCoordinates).forEach(([direction, coordsList]) => {\n    coordsList.forEach(([coord1, coord2]) => {\n      gameGrid[coord1][coord2].greaterThan.push(direction);\n    });\n  });\n}\n\nfunction addValueClues(gameGrid, fullGrid, valueCoordinates) {\n  valueCoordinates.forEach(([coord1, coord2]) => {\n    gameGrid[coord1][coord2].value = fullGrid[coord1][coord2];\n  });\n}\n\nfunction addPropertiesToEmptyBlocks(gameGrid) {\n  gameGrid.forEach(row =>\n    row.forEach(block => {\n      if (!block.value) {\n        block.enteredValue = null;\n        block.notes = [];\n      }\n    })\n  );\n}\n\nfunction noUniqueSolution(gameGrid) {\n  const solutions = solveGameGrid(gameGrid);\n  return solutions.length !== 1;\n}\n\nexport default getGameGrid;\n","import { getValueAtCoordinates } from 'game-logic';\nimport {\n  count2dArrayOccurrences,\n  generateCoordinates,\n  getTwoThirds,\n  getRandomIntInclusive,\n  getValueInDirection,\n  shuffleArray\n} from '../helpers';\n\n/**\n * Returns coordinates for blocks where 'greater than' chevrons should be shown, ensuring that the choices of blocks make logical sense\n * @param {array} grid A full 5*5 Futoshiki grid\n * @param {number} number The number of individual coordinates to generate\n */\nfunction createGreaterThanCoordinates(grid, cluesQuota) {\n  const quota = getCoordinatesQuota();\n  const greaterThanCoordinates = createCoordinatesMap(quota);\n\n  return greaterThanCoordinates;\n\n  function getCoordinatesQuota() {\n    return getRandomIntInclusive(cluesQuota / 2, getTwoThirds(cluesQuota));\n  }\n\n  function createCoordinatesMap(quota) {\n    const map = {\n      above: [],\n      below: [],\n      left: [],\n      right: []\n    };\n\n    for (let i = 0; i < quota; i++) {\n      let newCoordinates;\n      let direction;\n      do {\n        newCoordinates = generateCoordinates();\n        direction = getValidDirection(map, newCoordinates);\n      } while (!canUseCoordinates(newCoordinates, direction, map));\n\n      map[direction].push(newCoordinates);\n    }\n\n    return map;\n  }\n\n  function getValidDirection(map, newCoords) {\n    const shuffledDirections = shuffleArray(Object.keys(map));\n\n    for (let direction of shuffledDirections) {\n      const valid =\n        !coordsAlreadyUsedWithDirection(newCoords, direction, map) &&\n        isGreaterThanNeighbour(newCoords, direction);\n      if (valid) return direction;\n    }\n  }\n\n  function coordsAlreadyUsedWithDirection(newCoords, direction, map) {\n    const coordOccurrences = count2dArrayOccurrences(map[direction], newCoords);\n    return coordOccurrences > 0;\n  }\n\n  function isGreaterThanNeighbour(newCoords, direction) {\n    const value = getValueAtCoordinates(grid, newCoords);\n    const adjacentValue = getValueInDirection(grid, newCoords, direction);\n    return Boolean(adjacentValue) && value > adjacentValue;\n  }\n\n  function canUseCoordinates(newCoords, direction, map) {\n    return Boolean(direction) && !coordinatesUsedMaxTimes(newCoords, map);\n  }\n\n  function coordinatesUsedMaxTimes(newCoords, map) {\n    const allCoords = getAllCoordinates(map);\n    const occurrences = count2dArrayOccurrences(allCoords, newCoords);\n    return occurrences === 2;\n  }\n\n  function getAllCoordinates(map) {\n    return Object.values(map).flat();\n  }\n}\n\nexport default createGreaterThanCoordinates;\n","/**\n * Returns the value at specified coordinates of a 2D array. Returns undefined if the coordinates do not exist in the array\n * @param {array} arrayOfArrays he 2D array to search in\n * @param {array} coordinates\n */\nfunction getValueAtCoordinates(arrayOfArrays, coordinates) {\n  const row = arrayOfArrays[coordinates[0]] || [];\n  return row[coordinates[1]];\n}\n\nexport default getValueAtCoordinates;\n","import { SIDE_LENGTH } from 'constant-values';\nimport { getValueAtCoordinates } from 'game-logic';\nimport { arraysMatch, cloneArray, getValueInDirection } from '../helpers';\n\nconst oppositeDirections = [\n  ['right', 'left'],\n  ['left', 'right'],\n  ['above', 'below'],\n  ['below', 'above']\n];\n\n/**\n * Returns an array of 2d arrays, each a potential solution to the gameGrid passed in\n * @param {array} gameGrid A 2d Futoshiki game grid with value and greater than constraints\n * @param {array} solutions An optional array of solved Futoshiki grids - any solutions included will be considered invalid solutions by the algorithm\n */\nfunction solveGameGrid(gameGrid, solutions = []) {\n  if (solutions.length < 15) {\n    const solvedGrid = findSolution(gameGrid, solutions);\n    if (solvedGrid) {\n      solutions.push(solvedGrid);\n      return solveGameGrid(gameGrid, solutions);\n    }\n  }\n  return solutions;\n}\n\nfunction findSolution(gameGrid, solutions, coords = [0, 0]) {\n  const gridCopy = cloneArray(gameGrid);\n  const square = getValueAtCoordinates(gridCopy, coords);\n  if (gridIterationComplete(coords)) {\n    const numericGrid = getNumericGrid(gridCopy);\n    if (solutionAlreadyFound(solutions, numericGrid)) return null;\n    return numericGrid;\n  }\n\n  if (square.value) {\n    return findSolution(gridCopy, solutions, getNextCoordinates(coords));\n  }\n\n  const potentialValues = getPotentialValues(gridCopy, coords);\n  if (!potentialValues.length) return null;\n\n  for (let potentialValue of potentialValues) {\n    const gtClash = checkGreaterThans(potentialValue, gridCopy, coords, square);\n    if (gtClash) continue;\n\n    square.value = potentialValue;\n    const maybeSolvedGameGrid = findSolution(gridCopy, solutions, coords);\n    if (maybeSolvedGameGrid) return maybeSolvedGameGrid;\n  }\n  return null;\n}\n\nfunction gridIterationComplete(coords) {\n  return coords[0] === SIDE_LENGTH;\n}\n\nfunction getNumericGrid(grid) {\n  return grid.map(row => row.map(({ value }) => value));\n}\n\nfunction solutionAlreadyFound(solutions, grid) {\n  return solutions.some(solution => arraysMatch(grid, solution));\n}\n\nfunction getNextCoordinates([coord1, coord2]) {\n  if (coord2 === SIDE_LENGTH - 1) return [coord1 + 1, 0];\n  return [coord1, coord2 + 1];\n}\n\nfunction getPotentialValues(grid, coordinates) {\n  let potentialValues = getRange(SIDE_LENGTH);\n  function removePotentialValue(potentialValue) {\n    potentialValues = potentialValues.filter(value => value !== potentialValue);\n  }\n\n  // check row\n  for (let i = 0; i < SIDE_LENGTH; i++) {\n    const square = getValueAtCoordinates(grid, [coordinates[0], i]);\n    if (square.value) removePotentialValue(square.value);\n  }\n\n  // check column\n  for (let i = 0; i < SIDE_LENGTH; i++) {\n    const square = getValueAtCoordinates(grid, [i, coordinates[1]]);\n    if (square.value) removePotentialValue(square.value);\n  }\n\n  if (squareCannotBeFive(grid, coordinates)) removePotentialValue(5);\n  if (squareCannotBeOne(grid, coordinates)) removePotentialValue(1);\n\n  return potentialValues;\n}\n\nfunction getRange(length) {\n  return [...new Array(length)].map((_, idx) => idx + 1);\n}\n\nfunction squareCannotBeFive(grid, coords) {\n  return oppositeDirections.some(([direction, opposite]) => {\n    const square = getValueInDirection(grid, coords, direction);\n    return square && square.greaterThan.includes(opposite);\n  });\n}\n\nfunction squareCannotBeOne(grid, coords) {\n  const square = getValueAtCoordinates(grid, coords);\n  return Boolean(square.greaterThan.length);\n}\n\nfunction checkGreaterThans(...args) {\n  const squareGTClash = checkSquareGreaterThans(...args);\n  const surroundingGTClash = checkSurroundingGreaterThans(...args);\n  return Boolean(squareGTClash || surroundingGTClash);\n}\n\nfunction checkSquareGreaterThans(potentialValue, gridCopy, coords, square) {\n  for (const direction of square.greaterThan) {\n    const otherSquare = getValueInDirection(gridCopy, coords, direction);\n    if (otherSquare && otherSquare.value > potentialValue) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction checkSurroundingGreaterThans(potentialValue, gridCopy, coords) {\n  for (const [direction, opposite] of oppositeDirections) {\n    const otherSquare = getValueInDirection(gridCopy, coords, direction);\n    const { value, greaterThan } = otherSquare || {};\n    if (value && potentialValue > value && greaterThan.includes(opposite)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default solveGameGrid;\n","import { getCoordinatesInDirection } from '../helpers';\nimport { SIDE_LENGTH } from 'constant-values';\n\n/**\n * Returns a new set of coordinates within a 2d array based on original coordinates and direction passed in\n * @param {array} coords The coordinates to start from\n * @param {string} direction The direction in which to traverse\n */\nfunction traverseGrid(coords, direction) {\n  return getCoordinatesInDirection(coords, direction).map(coord => {\n    if (coord < 0) return coord + SIDE_LENGTH;\n    return coord % SIDE_LENGTH;\n  });\n}\n\nexport default traverseGrid;\n","import * as actionTypes from './action-types';\nimport { checkSolution, createFullGrid, getGameGrid } from 'game-logic';\n\nconst initialState = {\n  fullGrid: null,\n  gameGrid: null,\n  selectedBlock: null,\n  notesMode: false,\n  gameCompleted: false\n};\n\nfunction reducer(state = initialState, action) {\n  const { selectedBlock } = state;\n\n  switch (action.type) {\n    case actionTypes.CREATE_GRID:\n      const fullGrid = createFullGrid();\n      const gameGrid = getGameGrid(fullGrid);\n      return {\n        ...state,\n        fullGrid,\n        gameGrid,\n        selectedBlock: null,\n        gameCompleted: false,\n        notesMode: false\n      };\n\n    case actionTypes.DESELECT_BLOCK:\n      return { ...state, selectedBlock: null };\n\n    case actionTypes.SELECT_BLOCK:\n      return {\n        ...state,\n        selectedBlock: action.coords\n      };\n\n    case actionTypes.SET_BLOCK_VALUE:\n      return {\n        ...state,\n        gameGrid: state.gameGrid.map((row, rowIdx) =>\n          row.map((block, colIdx) => {\n            if (selectedBlock[0] !== rowIdx || selectedBlock[1] !== colIdx)\n              return block;\n            return { ...block, enteredValue: action.enteredValue };\n          })\n        )\n      };\n\n    case actionTypes.CHECK_SOLUTION:\n      const correctSolution = checkSolution(state.gameGrid, state.fullGrid);\n      if (!correctSolution) return state;\n      return {\n        ...state,\n        gameCompleted: true,\n        selectedBlock: null\n      };\n\n    case actionTypes.TOGGLE_NOTES_MODE:\n      return {\n        ...state,\n        notesMode: !state.notesMode\n      };\n\n    case actionTypes.EDIT_BLOCK_NOTES:\n      return {\n        ...state,\n        gameGrid: state.gameGrid.map((row, rowIdx) =>\n          row.map((block, colIdx) => {\n            if (selectedBlock[0] !== rowIdx || selectedBlock[1] !== colIdx)\n              return block;\n\n            const notes = block.notes.includes(action.note)\n              ? block.notes.filter(note => note !== action.note)\n              : [...block.notes, action.note];\n            return { ...block, notes };\n          })\n        )\n      };\n\n    case 'CHEAT':\n      return {\n        ...state,\n        gameCompleted: true,\n        selectedBlock: null\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import * as actionTypes from './action-types';\n\nexport const checkSolution = () => ({\n  type: actionTypes.CHECK_SOLUTION\n});\nexport const createGrid = () => ({ type: actionTypes.CREATE_GRID });\nexport const deselectBlock = () => ({ type: actionTypes.DESELECT_BLOCK });\nexport const editBlockNotes = note => ({\n  note,\n  type: actionTypes.EDIT_BLOCK_NOTES\n});\nexport const selectBlock = coords => ({\n  coords,\n  type: actionTypes.SELECT_BLOCK\n});\nexport const setBlockValue = enteredValue => ({\n  enteredValue,\n  type: actionTypes.SET_BLOCK_VALUE\n});\nexport const toggleNotesMode = () => ({ type: actionTypes.TOGGLE_NOTES_MODE });\n","export const CHECK_SOLUTION = 'CHECK_SOLUTION';\nexport const CREATE_GRID = 'CREATE_GRID';\nexport const DESELECT_BLOCK = 'DESELECT_BLOCK';\nexport const EDIT_BLOCK_NOTES = 'EDIT_BLOCK_NOTES';\nexport const SELECT_BLOCK = 'SELECT_BLOCK';\nexport const SET_BLOCK_VALUE = 'SET_BLOCK_VALUE';\nexport const TOGGLE_NOTES_MODE = 'TOGGLE_NOTES_MODE';\n","import reducer from './reducer';\n\nexport * from './actions';\nexport default reducer;\n","import React, { useCallback, useEffect } from 'react';\nimport useMousetrap from 'react-hook-mousetrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Content, Grid, BelowGame, Title, NumberControls } from 'components';\nimport Container from './container';\nimport { getValueAtCoordinates, traverseGrid } from 'game-logic';\nimport {\n  createGrid,\n  deselectBlock,\n  editBlockNotes,\n  selectBlock,\n  setBlockValue,\n  toggleNotesMode\n} from 'reducers';\n\nconst AppContainer = () => {\n  const selectedBlock = useSelector(({ selectedBlock }) => selectedBlock);\n  const dispatch = useDispatch();\n  const dispatchDeselectBlock = useCallback(() => {\n    if (selectedBlock) dispatch(deselectBlock());\n  }, [dispatch, selectedBlock]);\n\n  const noGameGrid = useSelector(({ gameGrid }) => !gameGrid);\n  useEffect(() => {\n    if (noGameGrid) dispatch(createGrid());\n  }, [dispatch, noGameGrid]);\n\n  const [moveUp, moveDown, moveLeft, moveRight] = [\n    'above',\n    'below',\n    'left',\n    'right'\n  ].map(direction => () => {\n    if (selectedBlock)\n      dispatch(selectBlock(traverseGrid(selectedBlock, direction)));\n  });\n  useMousetrap('up', moveUp);\n  useMousetrap('down', moveDown);\n  useMousetrap('left', moveLeft);\n  useMousetrap('right', moveRight);\n\n  useMousetrap('esc', () => dispatch(deselectBlock()));\n\n  const canSetBlockValue = useSelector(({ gameGrid, notesMode }) => {\n    if (!gameGrid || !selectedBlock || notesMode) return false;\n    return !getValueAtCoordinates(gameGrid, selectedBlock).value;\n  });\n\n  const canEditBlockNotes = useSelector(({ gameGrid, notesMode }) => {\n    if (!gameGrid || !selectedBlock || !notesMode) return false;\n    const { enteredValue, value } = getValueAtCoordinates(\n      gameGrid,\n      selectedBlock\n    );\n    return !value && !enteredValue;\n  });\n\n  const handleNumberInput = useCallback(number => {\n    console.log('number', number)\n    console.log('canEditBlockNotes', canEditBlockNotes)\n    console.log('canSetBlockValue', canSetBlockValue)\n    if (canSetBlockValue) return dispatch(setBlockValue(number));\n    if (canEditBlockNotes) return dispatch(editBlockNotes(number));\n  }, [canSetBlockValue, canEditBlockNotes, dispatch]);\n  useMousetrap('1', () => handleNumberInput(1));\n  useMousetrap('2', () => handleNumberInput(2));\n  useMousetrap('3', () => handleNumberInput(3));\n  useMousetrap('4', () => handleNumberInput(4));\n  useMousetrap('5', () => handleNumberInput(5));\n\n  function handleDeletePress() {\n    if (canSetBlockValue) dispatch(setBlockValue(null));\n  }\n  useMousetrap('backspace', handleDeletePress);\n  useMousetrap('del', handleDeletePress);\n\n  useMousetrap('shift', () => dispatch(toggleNotesMode()));\n\n  const gameCompleted = useSelector(({ gameCompleted }) => gameCompleted);\n  const title = gameCompleted ? 'Correct!' : 'Futoshiki';\n\n  return (\n    <Container\n      className=\"app-container\"\n      gameCompleted={gameCompleted}\n      onClick={dispatchDeselectBlock}\n    >\n      <Content className=\"content\">\n        <Title className=\"title\">{title}</Title>\n        <Grid />\n        <BelowGame />\n        <NumberControls handleNumberInput={handleNumberInput} />\n      </Content>\n    </Container>\n  );\n};\n\nexport default AppContainer;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex: 1;\n  margin-top: 4px;\n  position: relative;\n  flex-shrink: 2;\n  max-height: 45px;\n`;\n\nexport default Container;\n","import React from 'react';\n\nimport Container from './container';\nimport { NewGameButton, ToggleNotesButton } from 'components';\n\nconst BelowGame = () => {\n  return (\n    <Container className=\"below-game\">\n      <div className=\"invisible-left\" style={{ width: '96px', marginLeft: '15px' }} />\n      <NewGameButton />\n      <ToggleNotesButton />\n    </Container>\n  );\n};\n\nexport default BelowGame;\n","import styled, { css } from 'styled-components';\n\nfunction getDirectionStyles(direction) {\n  switch (direction) {\n    case 'right':\n      return `left: 114%;\n      @-moz-document url-prefix() {\n        bottom: 21%;\n      }`;\n    case 'left':\n      return `right: 114%;\n      transform: rotate(180deg);\n      @-moz-document url-prefix() {\n        bottom: 10%;\n      }`;\n    case 'above':\n      return `transform: rotate(270deg);\n      bottom: 98%;\n      @-moz-document url-prefix() {\n        left: 29%;\n      }`;\n    case 'below':\n      return `transform: rotate(90deg);\n      top: 98%;\n      @-moz-document url-prefix() {\n        right: 29%;\n      }`;\n    default:\n      return '';\n  }\n}\n\nconst Container = styled.div`\n  ${({ direction, theme: { colors } }) => css`\n    color: ${colors.lightBlack};\n    cursor: auto;\n    font-size: 33px;\n    position: absolute;\n    ${getDirectionStyles(direction)}\n  `}\n`;\n\nexport default Container;\n","import React from 'react';\n\nimport Container from './container';\n\nconst Chevron = ({ direction }) => {\n  return <Container direction={direction}>❯</Container>;\n};\n\nexport default Chevron;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n  ${({ containsValueClue, gameCompleted, isActive, theme: { colors } }) => {\n    let color = containsValueClue ? colors.lightBlack : colors.pastelBlue;\n    if (gameCompleted) color = colors.midBlue;\n\n    return css`\n      align-items: center;\n      background-color: ${colors.white};\n      border: solid 3px ${isActive ? colors.transparent : colors.lightBlack};\n      color: ${color};\n      cursor: pointer;\n      display: flex;\n      flex-basis: 0; /* sets the main size for all blocks */\n      flex-grow: 1; /* allows the same growth for all blocks, to a factor of their main size */\n      flex-shrink: 0; /* allows shrink down to main size (flex-basis) if the row/grid is thinner than all blocks put together */\n      font-size: 40px;\n      justify-content: center;\n      margin: 15px;\n      position: relative;\n      transition: color 0.3s linear;\n      user-select: none;\n\n      &:before {\n        padding-top: 100%; /* gives the box height - percentages are based on the WIDTH of the containing box so box width and height will scale together */\n        content: '';\n        float: left;\n      }\n\n      &:hover {\n        background-color: ${isActive ? colors.white : colors.lightBlue};\n      }\n    `;\n  }}\n`;\n\nexport default Container;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n  ${() => css`\n    display: flex;\n    font-size: 16px;\n    justify-content: space-between;\n    width: 90%;\n  `}\n`;\n\nexport default Container;\n","import styled, { css } from 'styled-components';\n\nconst Note = styled.div`\n  ${({ isActive }) => css`\n    font-weight: ${isActive ? 'bold' : 'inherit'};\n    opacity: ${isActive ? 1 : 0.25};\n  `}\n`;\n\nexport default Note;\n","import React, { Children } from 'react';\n\nimport { SIDE_LENGTH } from 'constant-values';\n\nimport Container from './container';\nimport Note from './note';\n\nconst Notes = ({ notes }) => {\n  return (\n    <Container>\n      {Children.toArray(\n        [...new Array(SIDE_LENGTH)].map((_, idx) => {\n          const number = idx + 1;\n          const isActive = notes.includes(number);\n          return <Note isActive={isActive}>{number}</Note>;\n        })\n      )}\n    </Container>\n  );\n};\n\nexport default Notes;\n","import React, { Children, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Chevron from './chevron';\nimport Container from './container';\nimport Notes from './notes';\nimport { checkSolution, selectBlock } from 'reducers';\n\nconst Block = ({ rowIndex, colIndex }) => {\n  const greaterThan = useSelector(({ gameGrid }) =>\n    gameGrid ? gameGrid[rowIndex][colIndex].greaterThan : []\n  );\n  const isActive = useSelector(({ selectedBlock }) =>\n    selectedBlock\n      ? selectedBlock[0] === rowIndex && selectedBlock[1] === colIndex\n      : false\n  );\n  const containsValueClue = useSelector(({ gameGrid }) =>\n    gameGrid ? Boolean(gameGrid[rowIndex][colIndex].value) : false\n  );\n  const blockValue = useSelector(({ gameGrid }) => {\n    if (!gameGrid) return null;\n    const { enteredValue, value } = gameGrid[rowIndex][colIndex];\n    return containsValueClue ? value : enteredValue;\n  });\n\n  const gameCompleted = useSelector(({ gameCompleted }) => gameCompleted);\n  const notes = useSelector(({ gameGrid }) => {\n    if (!gameGrid || containsValueClue) return null;\n    return gameGrid[rowIndex][colIndex].notes;\n  });\n  const showNotes = useSelector(({ notesMode }) =>\n    !blockValue && notes ? notesMode : false\n  );\n\n  const dispatch = useDispatch();\n  const handleClick = useCallback(\n    e => {\n      e.stopPropagation();\n      if (!isActive && !gameCompleted)\n        dispatch(selectBlock([rowIndex, colIndex]));\n    },\n    [isActive, gameCompleted, rowIndex, colIndex, dispatch]\n  );\n\n  useEffect(() => {\n    if (gameCompleted || containsValueClue || !blockValue || showNotes) return;\n    dispatch(checkSolution());\n  }, [containsValueClue, blockValue, gameCompleted, showNotes, dispatch]);\n\n  return (\n    <Container\n      containsValueClue={containsValueClue}\n      gameCompleted={gameCompleted}\n      greaterThan={greaterThan}\n      isActive={isActive}\n      onClick={handleClick}\n      showNotes={showNotes}\n    >\n      {showNotes ? <Notes notes={notes} /> : blockValue || ''}\n      {Children.toArray(\n        greaterThan.map(direction => <Chevron direction={direction} />)\n      )}\n    </Container>\n  );\n};\n\nexport default Block;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0;\n`;\n\nexport default Container;\n","import React, { Children } from 'react';\n\nimport Container from './container';\nimport { Row } from 'components';\n\nconst Grid = () => {\n  return (\n    <Container className=\"grid\">\n      {Children.toArray(\n        [...new Array(5)].map((_, rowIndex) => <Row rowIndex={rowIndex} />)\n      )}\n    </Container>\n  );\n};\n\nexport default Grid;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.button`\n  ${({ theme: { colors } }) => css`\n    background-color: white;\n    border: 3px solid ${colors.lightBlack};\n    border-radius: 4px;\n    color: ${colors.lightBlack};\n    cursor: pointer;\n    font-size: 25px;\n    padding: 5px 20px 6px;\n    overflow: hidden;\n\n    &:hover {\n      background-color: ${colors.lightBlue};\n    }\n\n    &:focus {\n      outline: none;\n    }\n  `}\n`;\n\nexport default Container;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Container from './container';\nimport { createGrid } from 'reducers';\n\nconst NewGameButton = () => {\n  const dispatch = useDispatch();\n  const startNewGame = useCallback(() => {\n    dispatch(createGrid());\n  }, [dispatch]);\n\n  return (\n    <Container className=\"new-game-button\" onClick={startNewGame}>\n      New Game\n    </Container>\n  );\n};\n\nexport default NewGameButton;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n  ${({ theme: { colors }, gameCompleted }) => {\n    return css`\n      align-items: center;\n      border-radius: 100%;\n      color: ${colors.darkBrown};\n      cursor: pointer;\n      display: flex;\n      flex-basis: 0; /* sets the main size for all blocks */\n      flex-grow: 1; /* allows the same growth for all blocks, to a factor of their main size */\n      flex-shrink: 0; /* allows shrink down to main size (flex-basis) if the row/grid is thinner than all blocks put together */\n      font-size: 40px;\n      justify-content: center;\n      margin: 20px;\n      position: relative;\n      transition: color 0.3s linear, opacity 0.3s linear;\n      user-select: none;\n      opacity: ${gameCompleted ? 0 : 1};\n\n      &:before {\n        padding-top: 100%; /* gives the box height - percentages are based on the WIDTH of the containing box so box width and height will scale together */\n        content: '';\n        float: left;\n      }\n\n      &:hover {\n        background-color: ${colors.lightBlue};\n      }\n    `;\n  }}\n`;\n\nexport default Container;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Container from './container';\n\nconst NumberButton = ({ number, handleNumberInput }) => {\n  const gameCompleted = useSelector(({ gameCompleted }) => gameCompleted);\n  return (\n    <Container\n      gameCompleted={gameCompleted}\n      onClick={(e) => {\n        e.stopPropagation();\n        handleNumberInput(number)\n      }}\n    >\n      {number}\n    </Container>\n  );\n};\n\nexport default NumberButton;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n`\n\nexport default Container;\n","import React from 'react';\n\nimport Container from './container';\nimport { NumberButton } from 'components';\n\nconst NumberControls = ({ handleNumberInput }) => {\n  return (\n    <Container\n      className=\"number-controls\"\n      onClick={e => e.stopPropagation()}\n    >\n      {['a', 'b', 'c', 'd', 'e'].map((key, idx) => {\n        const number = idx + 1;\n        return <NumberButton\n          number={number} key={key}\n          handleNumberInput={handleNumberInput}\n        />\n      })}\n    </Container>\n  );\n};\n\nexport default NumberControls;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: row;\n  justify-content: space-around;\n`;\n\nexport default Container;\n","import React, { Children } from 'react';\n\nimport { Block } from 'components';\nimport Container from './container';\n\nconst Row = ({ rowIndex }) => {\n  return (\n    <Container className=\"row\">\n      {Children.toArray(\n        [...Array(5)].map((_, colIndex) => (\n          <Block rowIndex={rowIndex} colIndex={colIndex} />\n        ))\n      )}\n    </Container>\n  );\n};\n\nexport default Row;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.button`\n  ${({ gameCompleted, theme: { colors } }) => css`\n    background-color: white;\n    border: 3px solid ${colors.lightBlack};\n    border-radius: 4px;\n    color: ${colors.lightBlack};\n    cursor: pointer;\n    font-size: 10px;\n    padding: 5px;\n    transition: opacity 0.3s linear;\n    opacity: ${gameCompleted ? 0 : 1};\n    width: 96px;\n    margin-right: 15px;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:hover {\n      background-color: ${colors.lightBlue};\n    }\n\n    .keyboard-shortcut {\n      margin: 0;\n      font-size: 11px;\n    }\n  `}\n`;\n\nexport default Container;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Container from './container';\nimport { toggleNotesMode } from 'reducers';\n\nconst ToggleNotesButton = () => {\n  const dispatch = useDispatch();\n  const dispatchToggleNotesMode = useCallback(\n    e => {\n      e.stopPropagation();\n      dispatch(toggleNotesMode());\n    },\n    [dispatch]\n  );\n\n  const notesAction = useSelector(({ notesMode }) =>\n    notesMode ? 'Hide' : 'Show'\n  );\n  const gameCompleted = useSelector(({ gameCompleted }) => gameCompleted);\n\n  return (\n    <Container gameCompleted={gameCompleted} onClick={dispatchToggleNotesMode} className=\"toggle-notes-button\">\n      {notesAction} Notes\n      <p className=\"keyboard-shortcut\">(Shift ⇧)</p>\n    </Container>\n  );\n};\n\nexport default ToggleNotesButton;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport reducer from 'reducers';\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'futoshiki',\n    storage\n  },\n  reducer\n);\nconst enhancer =\n  process.env.NODE_ENV === 'production' ? undefined : devToolsEnhancer({});\n\nfunction configureStore() {\n  const store = createStore(persistedReducer, enhancer);\n  const persistor = persistStore(store);\n  return { persistor, store };\n}\n\nexport default configureStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle, css } from 'styled-components';\n\nexport default createGlobalStyle`\n  ${({ theme }) => css`\n    html {\n      height: 100%;\n\n      body {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        margin: 0;\n\n        #root {\n          height: 100%;\n        }\n      }\n    }\n  `}\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { AppContainer } from 'components';\nimport { configureStore, unregister } from 'core';\nimport { GlobalStyles, theme } from 'styles';\n\nconst { persistor, store } = configureStore();\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <GlobalStyles />\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <AppContainer />\n      </PersistGate>\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\nunregister();\n","export default {\n  colors: {\n    brownishGrey: '#efe7d1',\n    darkTurquoise: '#8ac2e5',\n    darkBrown: '#483e3e',\n    faintLimeGreen: '#0ddb588c',\n    grey: '#4b6b7e',\n    lightBlack: '#323232',\n    lightBlue: '#dcffffde',\n    lightTurquoise: '#8dd0e5',\n    lilac: '#9a8ae5',\n    limeGreen: '#37d486',\n    midBlue: '#3789d4',\n    pastelBlue: '#6785e1',\n    pink: '#ffa5ac',\n    transparent: 'rgba(0, 0, 0, 0)',\n    white: '#ffffff'\n  }\n};\n"],"sourceRoot":""}